//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void GetRegionByGrayAndArea (HObject ho_Image, HObject ho_ProcessRegion, 
      out HObject ho_FoundRegion, HTuple hv_MedianRadius, HTuple hv_EmpWidth, HTuple hv_EmpHeight, 
      HTuple hv_EmpFactor, HTuple hv_ThresholdMinGray, HTuple hv_ThresholdMaxGray, 
      HTuple hv_AreaMin, HTuple hv_AreaMax, HTuple hv_ClosingRadius, HTuple hv_DilationRadius)
  {




    // Local iconic variables 

    HObject ho_ImageReduced, ho_ImageMedian, ho_ImageEmphasize;
    HObject ho_Regions, ho_ConnectedRegions, ho_SelectedRegions;
    HObject ho_RegionFillUp, ho_RegionClosing, ho_RegionDilation;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FoundRegion);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_ImageMedian);
    HOperatorSet.GenEmptyObj(out ho_ImageEmphasize);
    HOperatorSet.GenEmptyObj(out ho_Regions);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionFillUp);
    HOperatorSet.GenEmptyObj(out ho_RegionClosing);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ProcessRegion, out ho_ImageReduced);

    ho_ImageMedian.Dispose();
    HOperatorSet.MedianImage(ho_ImageReduced, out ho_ImageMedian, "circle", hv_MedianRadius, 
        "continued");
    ho_ImageEmphasize.Dispose();
    HOperatorSet.Emphasize(ho_ImageMedian, out ho_ImageEmphasize, hv_EmpWidth, hv_EmpHeight, 
        hv_EmpFactor);
    ho_Regions.Dispose();
    HOperatorSet.Threshold(ho_ImageEmphasize, out ho_Regions, hv_ThresholdMinGray, 
        hv_ThresholdMaxGray);
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_Regions, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
        "and", hv_AreaMin, hv_AreaMax);
    ho_RegionFillUp.Dispose();
    HOperatorSet.FillUp(ho_SelectedRegions, out ho_RegionFillUp);
    ho_RegionClosing.Dispose();
    HOperatorSet.ClosingCircle(ho_RegionFillUp, out ho_RegionClosing, hv_ClosingRadius);
    ho_RegionDilation.Dispose();
    HOperatorSet.DilationCircle(ho_RegionClosing, out ho_RegionDilation, hv_DilationRadius);
    ho_FoundRegion.Dispose();
    HOperatorSet.MoveRegion(ho_RegionDilation, out ho_FoundRegion, 0, 0);

    ho_ImageReduced.Dispose();
    ho_ImageMedian.Dispose();
    ho_ImageEmphasize.Dispose();
    ho_Regions.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();
    ho_RegionFillUp.Dispose();
    ho_RegionClosing.Dispose();
    ho_RegionDilation.Dispose();

    return;
  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

