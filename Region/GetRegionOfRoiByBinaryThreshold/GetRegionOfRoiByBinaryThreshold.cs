//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void GetRegionOfRoiByBinaryThreshold (HObject ho_Image, out HObject ho_FoundRegion, 
      HTuple hv_LightDark, HTuple hv_AreaMin, HTuple hv_AreaMax, HTuple hv_MoveRow, 
      HTuple hv_MoveColumn)
  {




    // Local iconic variables 

    HObject ho_Region, ho_ConnectedRegions, ho_SelectedRegions;

    // Local control variables 

    HTuple hv_UsedThreshold = null;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FoundRegion);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    ho_Region.Dispose();
    HOperatorSet.BinaryThreshold(ho_Image, out ho_Region, "max_separability", hv_LightDark, 
        out hv_UsedThreshold);

    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
        "and", hv_AreaMin, hv_AreaMax);

    ho_FoundRegion.Dispose();
    HOperatorSet.MoveRegion(ho_SelectedRegions, out ho_FoundRegion, hv_MoveRow, hv_MoveColumn);

    ho_Region.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();

    return;
  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

