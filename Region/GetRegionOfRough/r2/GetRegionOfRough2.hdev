<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<l>*dev_set_draw('margin')</l>
<c></c>
<c></c>
<c></c>
<c>*** Bottom</c>
<l>*read_image (Image, 'BlackBlack_188_2015-01-22_16.47.04_Cropped')</l>
<l>*read_image (Image, 'BlackBlack_288_2015-01-22_16.43.07_Cropped')</l>
<l>*read_image (Image, 'GoldBlack_090_2015-01-14_15.27.06_Cropped')</l>
<l>*read_image (Image, 'GoldBlack_144_2015-01-14_15.25.59_Cropped')</l>
<l>*read_image (Image, 'GoldBlack_188_2015-01-22_17.14.51_Cropped')</l>
<l>*read_image (Image, 'GoldBlack_288_2015-01-22_17.11.58_Cropped')</l>
<l>read_image (Image, 'SilverBlack_188_2015-01-22_17.02.55_Cropped')</l>
<l>*read_image (Image, 'SilverBlack_288_2015-01-22_17.01.36_Cropped')</l>
<l>read_image (Image2, 'SilverBlack2_188_2015-01-22_17.04.06_Cropped_NoPiece')</l>
<l>*read_image (Image2, 'SilverBlack2_288_2015-01-22_17.05.28_Cropped_NoPiece')</l>
<c></c>
<l>get_domain (Image, Domain1)</l>
<l>sobel_amp (Image, EdgeAmplitude1, 'sum_abs', 7)</l>
<l>gray_closing_rect (EdgeAmplitude1, ImageClosing, 11, 11)</l>
<l>intensity (Domain1, Image, Mean1a, Deviation1a)</l>
<l>intensity (Domain1, ImageClosing, Mean1b, Deviation1b)</l>
<c></c>
<l>get_domain (Image2, Domain2)</l>
<l>sobel_amp (Image2, EdgeAmplitude2, 'sum_abs', 7)</l>
<l>gray_closing_rect (EdgeAmplitude2, ImageClosing2, 11, 11)</l>
<l>intensity (Domain2, Image2, Mean2a, Deviation2a)</l>
<l>intensity (Domain2, ImageClosing2, Mean2b, Deviation2b)</l>
<c></c>
<l>GetRegionOfRoughWithBoundary (Image, FoundRegion, 0, 150, 5, 5, 5, 30000, 60000, 20, 20, 50, 50)</l>
<l>dev_set_draw ('margin')</l>
<l>shape_trans (FoundRegion, RegionTrans1, 'rectangle2')</l>
<c></c>
<l>stop()</l>
<c></c>
<c></c>
<c></c>
<c>*** TopLeft</c>
<l>read_image (Image2, 'GoldBlack_188_2015-01-22_17.14.51_TopLeft_Cropped')</l>
<l>*read_image (Image2, 'SilverBlack2_188_2015-01-22_17.04.06_NoPiece_TopLeft_Cropped')</l>
<l>*read_image (Image2, 'SilverBlack_2015-01-22_17.02.34_TopLeft_Cropped')</l>
<l>*read_image (Image2, 'BlackBlack_188_2015-01-22_16.47.04_TopLeft_Cropped')</l>
<c></c>
<l>GetRegionOfRoughWithBoundary (Image2, FoundRegion2, 0, 150, 5, 5, 5, 30000, 99999999, 20, 20, 200, 200)</l>
<l>dev_set_draw ('margin')</l>
<l>shape_trans (FoundRegion2, RegionTrans2, 'rectangle2')</l>
<c></c>
<l>stop()</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="GetRegionOfRoughWithBoundary">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="FoundRegion" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="ThresholdMinGray" base_type="ctrl" dimension="0"/>
<par name="ThresholdMaxGray" base_type="ctrl" dimension="0"/>
<par name="MinMaxGrayPercent" base_type="ctrl" dimension="0"/>
<par name="HatWidth" base_type="ctrl" dimension="0"/>
<par name="HatHeight" base_type="ctrl" dimension="0"/>
<par name="SelectAreaMin" base_type="ctrl" dimension="0"/>
<par name="SelectAreaMax" base_type="ctrl" dimension="0"/>
<par name="RoughAreaClosingWidth" base_type="ctrl" dimension="0"/>
<par name="RoughAreaClosingHeight" base_type="ctrl" dimension="0"/>
<par name="RoughAreaOpeningWidth" base_type="ctrl" dimension="0"/>
<par name="RoughAreaOpeningHeight" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>get_domain (Image, Domain)</l>
<l>region_features (Domain, 'width', Width)</l>
<l>region_features (Domain, 'height', Height)</l>
<c></c>
<c></c>
<c></c>
<l>threshold (Image, Region, ThresholdMinGray, ThresholdMaxGray)</l>
<c></c>
<l>min_max_gray (Region, Image, MinMaxGrayPercent, Min, Max, Range)</l>
<l>scale_image (Image, ImageScaled, 255/(Max-Min), -(255/(Max-Min))*Min)</l>
<c></c>
<c>*</c>
<l>gen_disc_se (SE, 'byte', HatWidth, HatHeight, 0)</l>
<c></c>
<c>*</c>
<l>gray_tophat (ImageScaled, SE, ImageTopHat)</l>
<l>min_max_gray (Region, ImageTopHat, MinMaxGrayPercent, Min, Max, Range)</l>
<l>scale_image (ImageTopHat, ImageScaled4, 255/(Max-Min), -(255/(Max-Min))*Min)</l>
<c></c>
<l>gray_bothat (ImageScaled, SE, ImageBotHat)</l>
<l>min_max_gray (Region, ImageBotHat, MinMaxGrayPercent, Min, Max, Range)</l>
<l>scale_image (ImageBotHat, ImageScaled5, 255/(Max-Min), -(255/(Max-Min))*Min)</l>
<c></c>
<l>add_image (ImageScaled4, ImageScaled5, ImageResult, 0.5, 0)</l>
<l>min_max_gray (Region, ImageResult, MinMaxGrayPercent, Min, Max, Range)</l>
<l>scale_image (ImageResult, ImageScaled5And6, 255/(Max-Min), -(255/(Max-Min))*Min)</l>
<c></c>
<l>binary_threshold (ImageScaled5And6, Region1, 'max_separability', 'light', UsedThreshold2)</l>
<c></c>
<l>gray_tophat (Image, SE, ImageTopHatDark)</l>
<l>gray_bothat (Image, SE, ImageBotHatDark)</l>
<l>add_image (ImageTopHatDark, ImageBotHatDark, ImageResultDark, 0.5, 0)</l>
<c></c>
<c>*</c>
<l>closing_rectangle1 (Region1, RegionClosing1, HatWidth, HatHeight)</l>
<c></c>
<l>complement (RegionClosing1, RegionComplement1)</l>
<l>connection (RegionComplement1, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', HatWidth * HatHeight, 9999999)</l>
<l>union1 (SelectedRegions, RegionUnion)</l>
<l>complement (RegionUnion, RegionComplement2)</l>
<c></c>
<l>opening_rectangle1 (RegionComplement2, RegionOpening, HatWidth * 2, HatHeight * 2)</l>
<l>connection (RegionOpening, ConnectedRegions1)</l>
<l>select_shape (ConnectedRegions1, SelectedRegions2, 'area', 'and', SelectAreaMin, SelectAreaMax)</l>
<c></c>
<l>fill_up (SelectedRegions2, RegionFillUp)</l>
<c></c>
<l>closing_rectangle1 (RegionFillUp, RegionClosing10, RoughAreaClosingWidth, RoughAreaClosingHeight)</l>
<l>opening_rectangle1 (RegionClosing10, RegionOpening12, RoughAreaOpeningWidth, RoughAreaOpeningHeight)</l>
<c></c>
<c></c>
<c></c>
<l>*binary_threshold (ImageResult1, Region3, 'max_separability', 'light', UsedThreshold1)</l>
<l>*closing_rectangle1 (Region3, RegionClosing33, HatWidth, HatHeight)</l>
<c></c>
<c></c>
<c>* sobel</c>
<l>reduce_domain (ImageScaled, Region, ImageReduced)</l>
<l>*sobel_amp (ImageReduced, EdgeAmplitude, 'sum_abs', HatWidth)</l>
<l>gray_range_rect (ImageReduced, ImageResult1, HatHeight, HatWidth)</l>
<l>*equ_histo_image (EdgeAmplitude, ImageEquHisto)</l>
<l>*min_max_gray (Region, EdgeAmplitude, MinMaxGrayPercent, Min, Max, Range)</l>
<l>*threshold (EdgeAmplitude, Region2, Min+10, 255)</l>
<c></c>
<l>binary_threshold (ImageResult1, Region2, 'max_separability', 'light', UsedThreshold)</l>
<l>closing_rectangle1 (Region2, RegionClosing22, HatWidth, HatHeight)</l>
<l>connection (RegionClosing22, ConnectedRegions2)</l>
<l>fill_up (ConnectedRegions2, RegionFillUp2)</l>
<l>select_shape (RegionFillUp2, SelectedRegions3, 'area', 'and', SelectAreaMin, 99999999)</l>
<l>fill_up (SelectedRegions3, RegionFillUp1)</l>
<l>closing_rectangle1 (RegionFillUp1, RegionClosing21, RoughAreaClosingWidth, RoughAreaClosingHeight)</l>
<l>*opening_rectangle1 (RegionClosing21, RegionOpening22, RoughAreaOpeningWidth, RoughAreaOpeningHeight)</l>
<l>opening_rectangle1 (RegionClosing21, RegionOpening22, RoughAreaClosingWidth, RoughAreaClosingHeight)</l>
<l>*shape_trans (RegionOpening22, RegionTrans, 'rectangle2')</l>
<c></c>
<c>* intersection</c>
<l>intersection (RegionOpening22, RegionOpening12, RegionIntersection)</l>
<l>connection (RegionIntersection, ConnectedRegions3)</l>
<l>select_shape (ConnectedRegions3, SelectedRegions3, 'area', 'and', SelectAreaMin, SelectAreaMax)</l>
<c></c>
<c></c>
<l>move_region (SelectedRegions3, FoundRegion, 0, 0)</l>
<c></c>
<l>return ()</l>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="GetRegionOfRoughWithBoundary">
<parameters>
<parameter id="FoundRegion">
<sem_type>region</sem_type>
</parameter>
<parameter id="HatHeight">
<default_type>integer</default_type>
<sem_type>integer</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="HatWidth">
<default_type>integer</default_type>
<sem_type>integer</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="Image">
<sem_type>image</sem_type>
<type_list>
<item>byte</item>
</type_list>
</parameter>
<parameter id="MinMaxGrayPercent">
<default_type>real</default_type>
<sem_type>number</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="RoughAreaClosingHeight">
<default_type>integer</default_type>
<sem_type>extent.y</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="RoughAreaClosingWidth">
<default_type>integer</default_type>
<sem_type>extent.x</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="RoughAreaOpeningHeight">
<default_type>integer</default_type>
<sem_type>extent.y</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="RoughAreaOpeningWidth">
<default_type>integer</default_type>
<sem_type>extent.x</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="SelectAreaMax">
<default_type>real</default_type>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="SelectAreaMin">
<default_type>real</default_type>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="ThresholdMaxGray">
<default_type>real</default_type>
<sem_type>number</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="ThresholdMinGray">
<default_type>real</default_type>
<sem_type>number</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
</hdevelop>
