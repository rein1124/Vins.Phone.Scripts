//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void GetRegionOfRoughWithSobelMean (HObject ho_Image, out HObject ho_FoundRegion, 
      HTuple hv_ThresholdMinGray, HTuple hv_ThresholdMaxGray, HTuple hv_MinMaxGrayPercent, 
      HTuple hv_HatWidth, HTuple hv_HatHeight, HTuple hv_SelectAreaMin, HTuple hv_SelectAreaMax, 
      HTuple hv_RoughAreaClosingWidth, HTuple hv_RoughAreaClosingHeight, HTuple hv_RoughAreaOpeningWidth, 
      HTuple hv_RoughAreaOpeningHeight, HTuple hv_SobelAmpSize, HTuple hv_SobelAmpMeanMin, 
      HTuple hv_SobelAmpThresholdMinGray)
  {




    // Local iconic variables 

    HObject ho_Domain, ho_Region, ho_ImageScaled;
    HObject ho_SE, ho_ImageTopHat, ho_ImageScaled4, ho_ImageBotHat;
    HObject ho_ImageScaled5, ho_ImageResult, ho_ImageScaled5And6;
    HObject ho_Region1, ho_ImageTopHatDark, ho_ImageBotHatDark;
    HObject ho_ImageResultDark, ho_RegionClosing1, ho_RegionComplement1;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_RegionUnion;
    HObject ho_RegionComplement2, ho_RegionOpening, ho_ConnectedRegions1;
    HObject ho_SelectedRegions2, ho_RegionFillUp, ho_RegionClosing10;
    HObject ho_RegionOpening12, ho_ImageReduced, ho_EdgeAmplitude;
    HObject ho_Region2, ho_RegionClosing22, ho_ConnectedRegions2;
    HObject ho_RegionFillUp2, ho_SelectedRegions3, ho_RegionFillUp1;
    HObject ho_RegionClosing21, ho_RegionOpening22, ho_RegionIntersection;
    HObject ho_ConnectedRegions3;

    // Local control variables 

    HTuple hv_Width = null, hv_Height = null, hv_Min = null;
    HTuple hv_Max = null, hv_Range = null, hv_UsedThreshold2 = null;
    HTuple hv_Mean = null, hv_Deviation = null;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FoundRegion);
    HOperatorSet.GenEmptyObj(out ho_Domain);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled);
    HOperatorSet.GenEmptyObj(out ho_SE);
    HOperatorSet.GenEmptyObj(out ho_ImageTopHat);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled4);
    HOperatorSet.GenEmptyObj(out ho_ImageBotHat);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled5);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled5And6);
    HOperatorSet.GenEmptyObj(out ho_Region1);
    HOperatorSet.GenEmptyObj(out ho_ImageTopHatDark);
    HOperatorSet.GenEmptyObj(out ho_ImageBotHatDark);
    HOperatorSet.GenEmptyObj(out ho_ImageResultDark);
    HOperatorSet.GenEmptyObj(out ho_RegionClosing1);
    HOperatorSet.GenEmptyObj(out ho_RegionComplement1);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionUnion);
    HOperatorSet.GenEmptyObj(out ho_RegionComplement2);
    HOperatorSet.GenEmptyObj(out ho_RegionOpening);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions2);
    HOperatorSet.GenEmptyObj(out ho_RegionFillUp);
    HOperatorSet.GenEmptyObj(out ho_RegionClosing10);
    HOperatorSet.GenEmptyObj(out ho_RegionOpening12);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_EdgeAmplitude);
    HOperatorSet.GenEmptyObj(out ho_Region2);
    HOperatorSet.GenEmptyObj(out ho_RegionClosing22);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions2);
    HOperatorSet.GenEmptyObj(out ho_RegionFillUp2);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions3);
    HOperatorSet.GenEmptyObj(out ho_RegionFillUp1);
    HOperatorSet.GenEmptyObj(out ho_RegionClosing21);
    HOperatorSet.GenEmptyObj(out ho_RegionOpening22);
    HOperatorSet.GenEmptyObj(out ho_RegionIntersection);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions3);
    ho_Domain.Dispose();
    HOperatorSet.GetDomain(ho_Image, out ho_Domain);
    HOperatorSet.RegionFeatures(ho_Domain, "width", out hv_Width);
    HOperatorSet.RegionFeatures(ho_Domain, "height", out hv_Height);



    ho_Region.Dispose();
    HOperatorSet.Threshold(ho_Image, out ho_Region, hv_ThresholdMinGray, hv_ThresholdMaxGray);

    HOperatorSet.MinMaxGray(ho_Region, ho_Image, hv_MinMaxGrayPercent, out hv_Min, 
        out hv_Max, out hv_Range);
    ho_ImageScaled.Dispose();
    HOperatorSet.ScaleImage(ho_Image, out ho_ImageScaled, 255/(hv_Max-hv_Min), (-(255/(hv_Max-hv_Min)))*hv_Min);

    //
    ho_SE.Dispose();
    HOperatorSet.GenDiscSe(out ho_SE, "byte", hv_HatWidth, hv_HatHeight, 0);

    //
    ho_ImageTopHat.Dispose();
    HOperatorSet.GrayTophat(ho_ImageScaled, ho_SE, out ho_ImageTopHat);
    HOperatorSet.MinMaxGray(ho_Region, ho_ImageTopHat, hv_MinMaxGrayPercent, out hv_Min, 
        out hv_Max, out hv_Range);
    ho_ImageScaled4.Dispose();
    HOperatorSet.ScaleImage(ho_ImageTopHat, out ho_ImageScaled4, 255/(hv_Max-hv_Min), 
        (-(255/(hv_Max-hv_Min)))*hv_Min);

    ho_ImageBotHat.Dispose();
    HOperatorSet.GrayBothat(ho_ImageScaled, ho_SE, out ho_ImageBotHat);
    HOperatorSet.MinMaxGray(ho_Region, ho_ImageBotHat, hv_MinMaxGrayPercent, out hv_Min, 
        out hv_Max, out hv_Range);
    ho_ImageScaled5.Dispose();
    HOperatorSet.ScaleImage(ho_ImageBotHat, out ho_ImageScaled5, 255/(hv_Max-hv_Min), 
        (-(255/(hv_Max-hv_Min)))*hv_Min);

    ho_ImageResult.Dispose();
    HOperatorSet.AddImage(ho_ImageScaled4, ho_ImageScaled5, out ho_ImageResult, 0.5, 
        0);
    HOperatorSet.MinMaxGray(ho_Region, ho_ImageResult, hv_MinMaxGrayPercent, out hv_Min, 
        out hv_Max, out hv_Range);
    ho_ImageScaled5And6.Dispose();
    HOperatorSet.ScaleImage(ho_ImageResult, out ho_ImageScaled5And6, 255/(hv_Max-hv_Min), 
        (-(255/(hv_Max-hv_Min)))*hv_Min);

    ho_Region1.Dispose();
    HOperatorSet.BinaryThreshold(ho_ImageScaled5And6, out ho_Region1, "max_separability", 
        "light", out hv_UsedThreshold2);

    ho_ImageTopHatDark.Dispose();
    HOperatorSet.GrayTophat(ho_Image, ho_SE, out ho_ImageTopHatDark);
    ho_ImageBotHatDark.Dispose();
    HOperatorSet.GrayBothat(ho_Image, ho_SE, out ho_ImageBotHatDark);
    ho_ImageResultDark.Dispose();
    HOperatorSet.AddImage(ho_ImageTopHatDark, ho_ImageBotHatDark, out ho_ImageResultDark, 
        0.5, 0);

    //
    ho_RegionClosing1.Dispose();
    HOperatorSet.ClosingRectangle1(ho_Region1, out ho_RegionClosing1, hv_HatWidth, 
        hv_HatHeight);

    ho_RegionComplement1.Dispose();
    HOperatorSet.Complement(ho_RegionClosing1, out ho_RegionComplement1);
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_RegionComplement1, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
        "and", hv_HatWidth*hv_HatHeight, 9999999);
    ho_RegionUnion.Dispose();
    HOperatorSet.Union1(ho_SelectedRegions, out ho_RegionUnion);
    ho_RegionComplement2.Dispose();
    HOperatorSet.Complement(ho_RegionUnion, out ho_RegionComplement2);

    ho_RegionOpening.Dispose();
    HOperatorSet.OpeningRectangle1(ho_RegionComplement2, out ho_RegionOpening, hv_HatWidth*2, 
        hv_HatHeight*2);
    ho_ConnectedRegions1.Dispose();
    HOperatorSet.Connection(ho_RegionOpening, out ho_ConnectedRegions1);
    ho_SelectedRegions2.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions1, out ho_SelectedRegions2, "area", 
        "and", hv_SelectAreaMin, hv_SelectAreaMax);

    ho_RegionFillUp.Dispose();
    HOperatorSet.FillUp(ho_SelectedRegions2, out ho_RegionFillUp);

    ho_RegionClosing10.Dispose();
    HOperatorSet.ClosingRectangle1(ho_RegionFillUp, out ho_RegionClosing10, hv_RoughAreaClosingWidth, 
        hv_RoughAreaClosingHeight);
    ho_RegionOpening12.Dispose();
    HOperatorSet.OpeningRectangle1(ho_RegionClosing10, out ho_RegionOpening12, hv_RoughAreaOpeningWidth, 
        hv_RoughAreaOpeningHeight);



    //binary_threshold (ImageResult1, Region3, 'max_separability', 'light', UsedThreshold1)
    //closing_rectangle1 (Region3, RegionClosing33, HatWidth, HatHeight)


    //sobel
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_Region, out ho_ImageReduced);
    ho_EdgeAmplitude.Dispose();
    HOperatorSet.SobelAmp(ho_Image, out ho_EdgeAmplitude, "sum_abs", hv_SobelAmpSize);
    HOperatorSet.Intensity(ho_Region, ho_EdgeAmplitude, out hv_Mean, out hv_Deviation);
    if ((int)(new HTuple(hv_Mean.TupleLess(hv_SobelAmpMeanMin))) != 0)
    {
      ho_FoundRegion.Dispose();
      HOperatorSet.GenEmptyRegion(out ho_FoundRegion);
      ho_Domain.Dispose();
      ho_Region.Dispose();
      ho_ImageScaled.Dispose();
      ho_SE.Dispose();
      ho_ImageTopHat.Dispose();
      ho_ImageScaled4.Dispose();
      ho_ImageBotHat.Dispose();
      ho_ImageScaled5.Dispose();
      ho_ImageResult.Dispose();
      ho_ImageScaled5And6.Dispose();
      ho_Region1.Dispose();
      ho_ImageTopHatDark.Dispose();
      ho_ImageBotHatDark.Dispose();
      ho_ImageResultDark.Dispose();
      ho_RegionClosing1.Dispose();
      ho_RegionComplement1.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionUnion.Dispose();
      ho_RegionComplement2.Dispose();
      ho_RegionOpening.Dispose();
      ho_ConnectedRegions1.Dispose();
      ho_SelectedRegions2.Dispose();
      ho_RegionFillUp.Dispose();
      ho_RegionClosing10.Dispose();
      ho_RegionOpening12.Dispose();
      ho_ImageReduced.Dispose();
      ho_EdgeAmplitude.Dispose();
      ho_Region2.Dispose();
      ho_RegionClosing22.Dispose();
      ho_ConnectedRegions2.Dispose();
      ho_RegionFillUp2.Dispose();
      ho_SelectedRegions3.Dispose();
      ho_RegionFillUp1.Dispose();
      ho_RegionClosing21.Dispose();
      ho_RegionOpening22.Dispose();
      ho_RegionIntersection.Dispose();
      ho_ConnectedRegions3.Dispose();

      return;
    }
    ho_Region2.Dispose();
    HOperatorSet.Threshold(ho_EdgeAmplitude, out ho_Region2, hv_SobelAmpThresholdMinGray, 
        255);
    ho_RegionClosing22.Dispose();
    HOperatorSet.ClosingRectangle1(ho_Region2, out ho_RegionClosing22, hv_HatWidth, 
        hv_HatHeight);
    ho_ConnectedRegions2.Dispose();
    HOperatorSet.Connection(ho_RegionClosing22, out ho_ConnectedRegions2);
    ho_RegionFillUp2.Dispose();
    HOperatorSet.FillUp(ho_ConnectedRegions2, out ho_RegionFillUp2);
    ho_SelectedRegions3.Dispose();
    HOperatorSet.SelectShape(ho_RegionFillUp2, out ho_SelectedRegions3, "area", "and", 
        hv_SelectAreaMin, 99999999);
    ho_RegionFillUp1.Dispose();
    HOperatorSet.FillUp(ho_SelectedRegions3, out ho_RegionFillUp1);
    ho_RegionClosing21.Dispose();
    HOperatorSet.ClosingRectangle1(ho_RegionFillUp1, out ho_RegionClosing21, hv_RoughAreaClosingWidth, 
        hv_RoughAreaClosingHeight);
    //opening_rectangle1 (RegionClosing21, RegionOpening22, RoughAreaOpeningWidth, RoughAreaOpeningHeight)
    ho_RegionOpening22.Dispose();
    HOperatorSet.OpeningRectangle1(ho_RegionClosing21, out ho_RegionOpening22, hv_RoughAreaClosingWidth, 
        hv_RoughAreaClosingHeight);
    //shape_trans (RegionOpening22, RegionTrans, 'rectangle2')

    //intersection
    ho_RegionIntersection.Dispose();
    HOperatorSet.Intersection(ho_RegionOpening22, ho_RegionOpening12, out ho_RegionIntersection
        );
    ho_ConnectedRegions3.Dispose();
    HOperatorSet.Connection(ho_RegionIntersection, out ho_ConnectedRegions3);
    ho_SelectedRegions3.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions3, out ho_SelectedRegions3, "area", 
        "and", hv_SelectAreaMin, hv_SelectAreaMax);


    ho_FoundRegion.Dispose();
    HOperatorSet.MoveRegion(ho_SelectedRegions3, out ho_FoundRegion, 0, 0);

    ho_Domain.Dispose();
    ho_Region.Dispose();
    ho_ImageScaled.Dispose();
    ho_SE.Dispose();
    ho_ImageTopHat.Dispose();
    ho_ImageScaled4.Dispose();
    ho_ImageBotHat.Dispose();
    ho_ImageScaled5.Dispose();
    ho_ImageResult.Dispose();
    ho_ImageScaled5And6.Dispose();
    ho_Region1.Dispose();
    ho_ImageTopHatDark.Dispose();
    ho_ImageBotHatDark.Dispose();
    ho_ImageResultDark.Dispose();
    ho_RegionClosing1.Dispose();
    ho_RegionComplement1.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();
    ho_RegionUnion.Dispose();
    ho_RegionComplement2.Dispose();
    ho_RegionOpening.Dispose();
    ho_ConnectedRegions1.Dispose();
    ho_SelectedRegions2.Dispose();
    ho_RegionFillUp.Dispose();
    ho_RegionClosing10.Dispose();
    ho_RegionOpening12.Dispose();
    ho_ImageReduced.Dispose();
    ho_EdgeAmplitude.Dispose();
    ho_Region2.Dispose();
    ho_RegionClosing22.Dispose();
    ho_ConnectedRegions2.Dispose();
    ho_RegionFillUp2.Dispose();
    ho_SelectedRegions3.Dispose();
    ho_RegionFillUp1.Dispose();
    ho_RegionClosing21.Dispose();
    ho_RegionOpening22.Dispose();
    ho_RegionIntersection.Dispose();
    ho_ConnectedRegions3.Dispose();

    return;




  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

