//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void GetRegionOfLightOrDark (HObject ho_Image, out HObject ho_FoundRegion, 
      HTuple hv_LightDark, HTuple hv_WidthMin, HTuple hv_WidthMax, HTuple hv_HeightMin, 
      HTuple hv_HeightMax, HTuple hv_DilationlWidth, HTuple hv_DilationHeight)
  {




    // Local iconic variables 

    HObject ho_Region, ho_ConnectedRegions, ho_SelectedRegions;
    HObject ho_SelectedRegions1, ho_RegionUnion, ho_Rectangle;

    // Local control variables 

    HTuple hv_UsedThreshold = null, hv_Row1 = null;
    HTuple hv_Column1 = null, hv_Row2 = null, hv_Column2 = null;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FoundRegion);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_RegionUnion);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    ho_Region.Dispose();
    HOperatorSet.BinaryThreshold(ho_Image, out ho_Region, "max_separability", hv_LightDark, 
        out hv_UsedThreshold);
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "width", 
        "and", hv_WidthMin, hv_WidthMax);
    ho_SelectedRegions1.Dispose();
    HOperatorSet.SelectShape(ho_SelectedRegions, out ho_SelectedRegions1, "height", 
        "and", hv_HeightMin, hv_HeightMax);
    ho_RegionUnion.Dispose();
    HOperatorSet.Union1(ho_SelectedRegions1, out ho_RegionUnion);
    HOperatorSet.SmallestRectangle1(ho_RegionUnion, out hv_Row1, out hv_Column1, 
        out hv_Row2, out hv_Column2);
    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle1(out ho_Rectangle, hv_Row1, hv_Column1, hv_Row2, hv_Column2);
    ho_FoundRegion.Dispose();
    HOperatorSet.DilationRectangle1(ho_Rectangle, out ho_FoundRegion, hv_DilationlWidth, 
        hv_DilationHeight);


    ho_Region.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();
    ho_SelectedRegions1.Dispose();
    ho_RegionUnion.Dispose();
    ho_Rectangle.Dispose();

    return;
  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

