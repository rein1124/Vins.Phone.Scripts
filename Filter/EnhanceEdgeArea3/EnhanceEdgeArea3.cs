//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 11.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void EnhanceEdgeArea3 (HObject ho_InputImage, out HObject ho_EnhancedImage, 
      HTuple hv_EmpMaskWidth, HTuple hv_EmpMaskHeight, HTuple hv_EmpMaskFactor, HTuple hv_MeanMaskWidth, 
      HTuple hv_MeanMaskHeight, HTuple hv_IterationCount, HTuple hv_ScaleMult, HTuple hv_ScaleAdd)
  {



    // Local iconic variables 

    HObject ho_ImageMean=null, ho_ImageScaled=null;


    // Local control variables 

    HTuple hv_Index = null;

    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_EnhancedImage);
    HOperatorSet.GenEmptyObj(out ho_ImageMean);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled);


    ho_EnhancedImage.Dispose();
    HOperatorSet.MeanImage(ho_InputImage, out ho_EnhancedImage, 1, 1);

    HTuple end_val3 = hv_IterationCount;
    HTuple step_val3 = 1;
    for (hv_Index=1; hv_Index.Continue(end_val3, step_val3); hv_Index = hv_Index.TupleAdd(step_val3))
    {
      ho_ImageMean.Dispose();
      HOperatorSet.MeanImage(ho_EnhancedImage, out ho_ImageMean, hv_MeanMaskWidth, 
          hv_MeanMaskHeight);
      ho_ImageScaled.Dispose();
      HOperatorSet.ScaleImage(ho_ImageMean, out ho_ImageScaled, hv_ScaleMult, hv_ScaleAdd);
      ho_EnhancedImage.Dispose();
      HOperatorSet.Emphasize(ho_ImageScaled, out ho_EnhancedImage, hv_EmpMaskWidth, 
          hv_EmpMaskHeight, hv_EmpMaskFactor);
    }

    //mean_image (EnhancedImage, EnhancedImage, 2, 2)

    ho_ImageMean.Dispose();
    ho_ImageScaled.Dispose();

    return;
  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

