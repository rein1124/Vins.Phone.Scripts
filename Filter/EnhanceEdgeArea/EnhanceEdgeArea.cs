//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 11.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
#endif

  // Procedures 
  public void EnhanceEdgeArea (HObject ho_InputImage, out HObject ho_EnhancedImage, 
      HTuple hv_LineStartPoint_Row, HTuple hv_LineStartPoint_Column, HTuple hv_LineEndPoint_Row, 
      HTuple hv_LineEndPoint_Column, HTuple hv_RoiWidthLen, HTuple hv_EmpMaskWidth, 
      HTuple hv_EmpMaskHeight, HTuple hv_EmpMaskFactor, HTuple hv_MeanMaskWidth, HTuple hv_MeanMaskHeight, 
      HTuple hv_IterationCount)
  {



    // Local iconic variables 

    HObject ho_Rectangle, ho_RegionDilation, ho_ImageEmphasize=null;


    // Local control variables 

    HTuple hv_TmpCtrl_Row = null, hv_TmpCtrl_Column = null;
    HTuple hv_TmpCtrl_Dr = null, hv_TmpCtrl_Dc = null, hv_TmpCtrl_Phi = null;
    HTuple hv_TmpCtrl_Len1 = null, hv_TmpCtrl_Len2 = null;
    HTuple hv_Index = null;

    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_EnhancedImage);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    HOperatorSet.GenEmptyObj(out ho_ImageEmphasize);

    //
    //init
    //FilterAlpha := 6
    //Measure 01: Convert coordinates to rectangle2 type
    hv_TmpCtrl_Row = 0.5*(hv_LineStartPoint_Row+hv_LineEndPoint_Row);
    hv_TmpCtrl_Column = 0.5*(hv_LineStartPoint_Column+hv_LineEndPoint_Column);
    hv_TmpCtrl_Dr = hv_LineStartPoint_Row-hv_LineEndPoint_Row;
    hv_TmpCtrl_Dc = hv_LineEndPoint_Column-hv_LineStartPoint_Column;
    hv_TmpCtrl_Phi = hv_TmpCtrl_Dr.TupleAtan2(hv_TmpCtrl_Dc);
    hv_TmpCtrl_Len1 = 0.5*((((hv_TmpCtrl_Dr*hv_TmpCtrl_Dr)+(hv_TmpCtrl_Dc*hv_TmpCtrl_Dc))).TupleSqrt()
        );
    hv_TmpCtrl_Len2 = hv_RoiWidthLen.Clone();
    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle, hv_TmpCtrl_Row, hv_TmpCtrl_Column, 
        hv_TmpCtrl_Phi, hv_TmpCtrl_Len1, hv_TmpCtrl_Len2);

    ho_RegionDilation.Dispose();
    HOperatorSet.DilationRectangle1(ho_Rectangle, out ho_RegionDilation, 100, 100);

    ho_EnhancedImage.Dispose();
    HOperatorSet.ReduceDomain(ho_InputImage, ho_RegionDilation, out ho_EnhancedImage
        );

    HTuple end_val17 = hv_IterationCount;
    HTuple step_val17 = 1;
    for (hv_Index=1; hv_Index.Continue(end_val17, step_val17); hv_Index = hv_Index.TupleAdd(step_val17))
    {
      ho_ImageEmphasize.Dispose();
      HOperatorSet.Emphasize(ho_EnhancedImage, out ho_ImageEmphasize, hv_EmpMaskWidth, 
          hv_EmpMaskHeight, hv_EmpMaskFactor);
      ho_EnhancedImage.Dispose();
      HOperatorSet.MeanImage(ho_ImageEmphasize, out ho_EnhancedImage, hv_MeanMaskWidth, 
          hv_MeanMaskHeight);
    }

    ho_Rectangle.Dispose();
    ho_RegionDilation.Dispose();
    ho_ImageEmphasize.Dispose();

    return;
  }


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

